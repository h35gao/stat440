npts <- 100
aseq <- seq(1.5, 3, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
plot(x = 0, type = "n", xlim = c(0,3), ylim=c(0,10),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n",
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
npts <- 100
aseq <- seq(1.5, 3, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
plot(x = 0, type = "n", xlim = c(1.5,3), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n",
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
ldens
npts <- 100
aseq <- seq(1.5, 3, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
plot(x = 0, type = "n", xlim = c(1.5,3), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
plot(x = 0, type = "n", xlim = c(1.5,3), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
plot(x = 0, type = "n", xlim = c(1.5,3.5), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
par(mfrow = c(1,2))
plot(x = 0, type = "n", xlim = c(1.5,3.5), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.55,0.025), acc.out = TRUE)$accept
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.5,0.025), acc.out = TRUE)$accept
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.52,0.025), acc.out = TRUE)$accept
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.53,0.025), acc.out = TRUE)$accept
source('h35gao-quiz4.R')
diff <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
r1 <- sum(dggamma(y,alpha,beta,lambda,log=TRUE))
r2 <- ggamma.loglik(alpha,eta,lambda,logy)
diff[i] <- r1-r2
}
diff
ratio <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
khat <- n*alpha/lambda+1
ghat <- sum(exp(lambda*logy))
loglik <- ggamma.loglik(alpha,eta,lambda,logy)
logmarg <- ggamma.logmarg(alpha,lambda,logy,khat,ghat)
logcond <- dgamma(eta,shape=khat,rate=ghat,log = TRUE)
ratio[i] <- loglik - logmarg - logcond
}
ratio
set.seed(2018)
n <- 500
alpha <- 2.3
beta <- 1.7
lambda <- 0.26
y <- rggamma(n, alpha, beta, lambda)
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
par(mfrow = c(1,2))
plot(x = 0, type = "n", xlim = c(1.5,3.5), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.53,0.025), acc.out = TRUE)$accept
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.54,0.025), acc.out = TRUE)$accept
source('h35gao-quiz4.R')
diff <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
r1 <- sum(dggamma(y,alpha,beta,lambda,log=TRUE))
r2 <- ggamma.loglik(alpha,eta,lambda,logy)
diff[i] <- r1-r2
}
diff
ratio <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
khat <- n*alpha/lambda+1
ghat <- sum(exp(lambda*logy))
loglik <- ggamma.loglik(alpha,eta,lambda,logy)
logmarg <- ggamma.logmarg(alpha,lambda,logy,khat,ghat)
logcond <- dgamma(eta,shape=khat,rate=ghat,log = TRUE)
ratio[i] <- loglik - logmarg - logcond
}
ratio
set.seed(2018)
n <- 500
alpha <- 2.3
beta <- 1.7
lambda <- 0.26
y <- rggamma(n, alpha, beta, lambda)
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
par(mfrow = c(1,2))
plot(x = 0, type = "n", xlim = c(1.5,3.5), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.54,0.025), acc.out = TRUE)$accept
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.55,0.025), acc.out = TRUE)$accept
source('h35gao-quiz4.R')
diff <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
r1 <- sum(dggamma(y,alpha,beta,lambda,log=TRUE))
r2 <- ggamma.loglik(alpha,eta,lambda,logy)
diff[i] <- r1-r2
}
diff
ratio <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
khat <- n*alpha/lambda+1
ghat <- sum(exp(lambda*logy))
loglik <- ggamma.loglik(alpha,eta,lambda,logy)
logmarg <- ggamma.logmarg(alpha,lambda,logy,khat,ghat)
logcond <- dgamma(eta,shape=khat,rate=ghat,log = TRUE)
ratio[i] <- loglik - logmarg - logcond
}
ratio
set.seed(2018)
n <- 500
alpha <- 2.3
beta <- 1.7
lambda <- 0.26
y <- rggamma(n, alpha, beta, lambda)
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
par(mfrow = c(1,2))
plot(x = 0, type = "n", xlim = c(1.5,3.5), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.55,0.025), acc.out = TRUE)$accept
M <- 200000
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.55,0.025), acc.out = TRUE)$accept
source('h35gao-quiz4.R')
diff <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
r1 <- sum(dggamma(y,alpha,beta,lambda,log=TRUE))
r2 <- ggamma.loglik(alpha,eta,lambda,logy)
diff[i] <- r1-r2
}
diff
ratio <- rep(0,10)
n <- 100
y <- runif(n,0,1)
logy <- log(y)
for (i in 1:10) {
alpha <- runif(1,0,1)
beta <- runif(1,0,1)
lambda <- runif(1,0,1)
eta <- beta^lambda
khat <- n*alpha/lambda+1
ghat <- sum(exp(lambda*logy))
loglik <- ggamma.loglik(alpha,eta,lambda,logy)
logmarg <- ggamma.logmarg(alpha,lambda,logy,khat,ghat)
logcond <- dgamma(eta,shape=khat,rate=ghat,log = TRUE)
ratio[i] <- loglik - logmarg - logcond
}
ratio
set.seed(2018)
n <- 500
alpha <- 2.3
beta <- 1.7
lambda <- 0.26
y <- rggamma(n, alpha, beta, lambda)
npts <- 100
aseq <- seq(1.5, 3.5, len = npts)
lseq <- seq(0.1, 0.5, len = npts)
alseq <- as.matrix(expand.grid(aseq, lseq))
logy <- log(y)
# pi(gamma, lambda) \propto 1
lpmat <- apply(alseq, 1, function(theta) {
khat <- n*theta[1]/theta[2]+1
ghat <- sum(exp(theta[2]*logy))
ggamma.logmarg(theta[1], theta[2], logy, khat, ghat) + logprior(theta[1], theta[2])
})
lpmat <- matrix(lpmat, npts, npts)
aldens <- exp(lpmat-max(lpmat))
adens <- rowSums(aldens)
da <- aseq[2]-aseq[1]
adens <- adens/sum(adens)/da # normalize
ldens <- colSums(aldens)
dl <- lseq[2]-lseq[1]
ldens <- ldens/sum(ldens)/dl
cex <- 1.5
par(mfrow = c(1,2))
plot(x = 0, type = "n", xlim = c(1.5,3.5), ylim=c(0,1),
cex.lab = cex, cex.main = cex,
xlab = expression(alpha), ylab = "Density",
main = expression(p(alpha*" | "*bold(y))))
clrs <- c("black", "blue", "red")
lines(aseq, adens, col = clrs[1])
plot(x = 0, type = "n", ylim = c(0,10), xlim = c(0.1,0.5),
cex.lab = cex, cex.main = cex,
xlab = expression(lambda), ylab = "Density",
main = expression(p(lambda*" | "*bold(y))))
lines(lseq, ldens, col = clrs[1])
alpha0 <- rlnorm(1,0,2)
lambda0 <- rlnorm(1,0,2)
M <- 500
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.55,0.025), acc.out = TRUE)$accept
M <- 200000
ggamma.post(nsamples = M, y = y, alpha0 = alpha0, lambda0 = lambda0, mwg.sd = c(0.55,0.025), acc.out = TRUE)$accept
